<?php
$message = '';

// check if a file has been uploaded
if (isset($_FILES['uploaded_file']) && $_FILES['uploaded_file']['error'] === UPLOAD_ERR_OK) {
    // get file details
    $fileTmpPath = $_FILES['uploaded_file']['tmp_name'];
    $fileName = $_FILES['uploaded_file']['name'];
    $fileSize = $_FILES['uploaded_file']['size'];
    $fileType = $_FILES['uploaded_file']['type'];
    $fileNameCmps = explode(".", $fileName);
    $fileExtension = strtolower(end($fileNameCmps));

    // define upload path
    $uploadFileDir = './uploads/';
    $dest_path = $uploadFileDir . $fileName;

    // check for allowed file types
    $allowedfileExtensions = array('jpg', 'gif', 'png', 'txt', 'pdf', 'php');

    if (in_array($fileExtension, $allowedfileExtensions)) {
        // mv the file to the uploads directory
        if (move_uploaded_file($fileTmpPath, $dest_path)) {
            $message = 'File is successfully uploaded.';

            // display file details
            echo "<h2>File Details</h2>";
            echo "<p>Filename: " . htmlspecialchars($fileName) . "</p>";
            echo "<p>File Size: " . htmlspecialchars($fileSize) . " bytes</p>";
            echo "<p>File Type: " . htmlspecialchars($fileType) . "</p>";

        } else {
            $message = 'There was an error moving the file to the upload directory. Please make sure the upload directory is writable by the web server.';
        }
    } else {
        $message = 'Upload failed. Allowed file types: ' . implode(',', $allowedfileExtensions);
    }
} else {
    $message = 'No file uploaded or there was an upload error.';
}

echo "<p style='color: blue;'>$message</p>";
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>File Upload and Command Injection Demo</title>
    <style>
 p {
            color: #4682b4;
        }
        h2 {
            color: #4682b4;
            text-align: center;
        }
        button {
            background-color: #4682b4;
            border: 1px solid #4682b4;
            border-radius: 0 4px 4px 0;
            padding: 10px;
            cursor: pointer;
            color: #fff;
            font-size: 16px;
        }
        .debug {
            color: blue;
        }
        .debug-output {
            color: black;
        }
        .cmd-output {
            color: yellow;
            background-color: black;
            padding: 10px;
            white-space: pre-wrap;
        }
    </style>
</head>
<body>

    <h2>Include Remote File</h2>
    <form action="upload.php" method="get">
        Enter URL:
        <input type="text" name="url">
        <button type="submit">Include</button>
    </form>


    <h2>Get File Details</h2>
    <form action="upload.php" method="get">
        Enter filename:
        <input type="text" name="filename">
        <button type="submit">Find</button>
    </form>


    <h2>Access Uploaded files Locally available on Server</h2>
    <form action="upload.php" method="get">
        Enter file path:
        <input type="text" name="filepath">
        <button type="submit">Access</button>
    </form>

    <?php

// RFI demo using file_get_contents and eval instead of allow_url_include.
// note: using eval is highly dangerous and should never be used in production
if (isset($_GET['url'])) {
    $url = $_GET['url'];
    echo "<p class='debug'>URL parameter received: <span class='debug-output'>" . htmlspecialchars($url) . "</span></p>";
    echo "<p class='debug'>Including content from: <span class='debug-output'>" . htmlspecialchars($url) . "</span></p>";

    // fetch remote content
    $content = file_get_contents($url);
    if ($content === false) {
        echo "<p class='debug-output'>Failed to retrieve the content from the URL.</p>";
    } else {
        echo "<p class='debug-output'>Remote content:</p>";
        echo "<div class='cmd-output'>$content</div>";

        // for demonstration purposes, evaluate the remote content
        eval($content);
    }
}



    // cmd injection demo
    if (isset($_GET['filename'])) {
        $filename = $_GET['filename'];
        echo "<p class='debug'>Filename parameter received: <span class='debug-output'>" . htmlspecialchars($filename) . "</span></p>";
        
        // Vulnerable to command injection
        $command = "dir " . $filename;
        echo "<p class='debug'>Executing command: <span class='debug-output'>" . htmlspecialchars($command) . "</span></p>";
        $output = shell_exec($command);
        
        if ($output === null) {
            echo "<p class='debug-output'>Command execution failed or no output returned.</p>";
        } else {
            echo "<p class='debug'>Command output:</p>";
            echo "<div class='cmd-output'>$output</div>";
        }
    }



// LFI demo: local file inclusion
if (isset($_GET['filepath'])) {
    $filepath = $_GET['filepath'];
    echo "<p class='debug'>File path parameter received: <span class='debug-output'>" . htmlspecialchars($filepath) . "</span></p>";

    // check if file exists
    if (file_exists($filepath)) {
        echo "<p class='debug'>Including content from: <span class='debug-output'>" . htmlspecialchars($filepath) . "</span></p>";

        // get file type
        $fileType = mime_content_type($filepath);

        
        if (strpos($fileType, 'image') === 0) { // If the file is an image, display it
            
            $imageData = base64_encode(file_get_contents($filepath)); // Read image path, convert to base64 encoding

            // format the image SRC:  data:{mime};base64,{data};
            $src = 'data:' . $fileType . ';base64,' . $imageData;

            // echo a sample image
            echo '<p>Image content:</p>';
            echo '<img src="' . $src . '" alt="Included Image">';
        } else {
            // read and display the file content for non-image files
            $content = file_get_contents($filepath);
            if ($content === false) {
                echo "<p class='debug-output'>Failed to retrieve the content from the file.</p>";
            } else {
                echo "<p class='debug-output'>File content:</p>";
                echo "<div class='cmd-output'>" . htmlspecialchars($content) . "</div>";
            }
        }
    } else {
        echo "<p class='debug-output'>File does not exist: <span class='debug-output'>" . htmlspecialchars($filepath) . "</span></p>";
    }
}



    ?>
</body>
</html>
